adult = read.csv("adults.csv")
adult$X = NULL
set.seed(13)
training_size <- round(.75 * nrow(adult))  # training set size
indices = sample(1:nrow(adult), training_size)
training_set <- adult[indices,]
testing_set <- adult[-(indices),]
m1 <- glm(income ~ ., data = adult, family = binomial('logit'))
summary(m1)
View(adult)
set.seed(13)
training_size <- round(.75 * nrow(adult))  # training set size
indices = sample(1:nrow(adult), training_size)
training_set <- adult[indices,]
testing_set <- adult[-(indices),]
m1 <- glm(income ~ ., data = adult, family = binomial('logit'))
summary(m1)
View(training_set)
View(adult)
View(testing_set)
?predict
predict(m1, newdata = testing_set)
a=predict(m1, newdata = testing_set)
a=as.data.frame(a)
View(a)
a=predict(m1, newdata = testing_set,type = "response")
a=as.data.frame(a)
summary(a)
pre_test = as.data.frame(predict(m1, newdata = testing_set, type = "response"))
testing_set$income=">50k"
set.seed(13)
training_size <- round(.75 * nrow(adult))  # training set size
indices = sample(1:nrow(adult), training_size)
training_set <- adult[indices,]
testing_set <- adult[-(indices),]
m1 <- glm(income ~ ., data = adult, family = binomial('logit'))
summary(m1)
testing_set[testing_set$income=='>50k']
testing_set[testing_set$income==">50k"]
testing_set$income
testing_set$income=='>50K'
pre_test = as.data.frame(predict(m1, newdata = testing_set, type = "response"))
clas_cor = sum((pre_test>=1/2&testing_set$income=='>50K')||(pre_test<1/2&testing_set$income=='<=50K'))
pre_test>=0.5
pre_test = as.data.frame(predict(m1, newdata = testing_set, type = "response"))
clas_cor = sum((pre_test>=1/2&&testing_set$income=='>50K')||(pre_test<1/2&&testing_set$income=='<=50K'))
pre_test>=1/2&&testing_set$income=='>50K'
testing_set$income=='>50K'
pre_test>=1/2&&testing_set$income=='>50K'
b=testing_set$income=='>50K'
a=pre_test>=1/2
View(pre_test)
a=pre_test$`predict(m1, newdata = testing_set, type = "response")`>=1/2
a+b
c=a+b
c[c==2]/length(c)
sum(c[c==2])/length(c)
sum(c[c==2|c==0])/length(c)
sum(c[c==2||c==0])/length(c)
c==2
sum(c==2)+sum(c==0)
pre_test = as.data.frame(predict(m1, newdata = testing_set, type = "response"))
pre_class = pre_test$`predict(m1, newdata = testing_set, type = "response")`>=1/2
true_class = testing_set$income=='>50K'
pre_test = as.data.frame(predict(m1, newdata = testing_set, type = "response"))
pre_class = pre_test$`predict(m1, newdata = testing_set, type = "response")`>=1/2
true_class = testing_set$income=='>50K'
correct_percentage = (sum((pre_class+true_class)==2)+sum((pre_class+true_class)==0))/length(testing_set)
(sum((pre_class+true_class)==2)+sum((pre_class+true_class)==0))
pre_test = as.data.frame(predict(m1, newdata = testing_set, type = "response"))
pre_class = pre_test$`predict(m1, newdata = testing_set, type = "response")`>=1/2
true_class = testing_set$income=='>50K'
correct_percentage = (sum((pre_class+true_class)==2)+sum((pre_class+true_class)==0))/length(testing_set$income)
library(MASS)
library(dplyr)
model_lda = lda(Y~X, data = training_set)
library(MASS)
library(dplyr)
model_lda = lda(income~, data = training_set)
library(MASS)
library(dplyr)
model_lda = lda(income~., data = training_set)
lda_predictions <- model_lda %>% predict(testing_set)
View(lda_predictions)
lda_predictions$class
library(MASS)
library(dplyr)
model_lda = lda(income~., data = training_set)
lda_predictions <- model_lda %>% predict(testing_set)
lda_correct = sum(lda_predictions$class==testing_set$income)/length(testing_set$income)
pre_test = as.data.frame(predict(m1, newdata = testing_set, type = "response"))
pre_class = pre_test$`predict(m1, newdata = testing_set, type = "response")`>=1/2
true_class = testing_set$income=='>50K'
glm_correct = (sum((pre_class+true_class)==2)+sum((pre_class+true_class)==0))/length(testing_set$income)
setwd("~/FILES/UNC Course/STOR Major/STOR 565/4. Computing Assignments/Assignment 7/CA07")
#insert the data sheet and create the training and test data
kid = read.csv("kids.csv")
set.seed(13)
training_size <- round(.75 * nrow(kid)) # training set size
indices = sample(1:nrow(kid), training_size)
training_kid <- kid[indices,]
testing_kid <- kid[-(indices),]
View(testing_kid)
View(kid)
#insert the data sheet and create the training and test data
kid = read.csv("kids.csv")
kid$Obs.No.=NULL
set.seed(13)
training_size <- round(.75 * nrow(kid)) # training set size
indices = sample(1:nrow(kid), training_size)
training_kid <- kid[indices,]
testing_kid <- kid[-(indices),]
#set up the glm model
glm_kid <- glm(Buy ~ ., data = kid, family = binomial('logit'))
summary(glm_kid)
kid_test = as.data.frame(predict(glm_kid, newdata = testing_kid, type = "response"))
#pre_kid = kid_test$`predict(m1, newdata = testing_set, type = "response")`>=1/2
#true_kid = testing_set$income=='>50K'
#glm_correct = (sum((pre_class+true_class)==2)+sum((pre_class+true_class)==0))/length(testing_set$income)
View(kid_test)
kid_test = as.data.frame(predict(glm_kid, newdata = testing_kid, type = "response"))
pre_kid = kid_test$`predict(glm_kid, newdata = testing_kid, type = "response")`>=1/2
true_kid = testing_kid$Buy=='1'
#glm_correct = (sum((pre_class+true_class)==2)+sum((pre_class+true_class)==0))/length(testing_set$income)
set.seed(13)
training_size <- round(.75 * nrow(adult))  # training set size
indices = sample(1:nrow(adult), training_size)
training_set <- adult[indices,]
testing_set <- adult[-(indices),]
m1 <- glm(income ~ ., data = training_set, family = binomial('logit'))
summary(m1)
pre_test = as.data.frame(predict(m1, newdata = testing_set, type = "response"))
pre_class = pre_test$`predict(m1, newdata = testing_set, type = "response")`>=1/2
true_class = testing_set$income=='>50K'
glm_correct = (sum((pre_class+true_class)==2)+sum((pre_class+true_class)==0))/length(testing_set$income)
library(MASS)
library(dplyr)
model_lda = lda(income~., data = training_set)
lda_predictions <- model_lda %>% predict(testing_set)
lda_correct = sum(lda_predictions$class==testing_set$income)/length(testing_set$income)
set.seed(13)
training_size <- round(.75 * nrow(adult))  # training set size
indices = sample(1:nrow(adult), training_size)
training_set <- adult[indices,]
testing_set <- adult[-(indices),]
m1 <- glm(income ~ ., data = training_set, family = binomial('logit'))
summary(m1)
#set up the glm model
glm_kid <- glm(Buy ~ ., data = training_kid, family = binomial('logit'))
summary(glm_kid)
kid_test = as.data.frame(predict(glm_kid, newdata = testing_kid, type = "response"))
pre_kid = kid_test$`predict(glm_kid, newdata = testing_kid, type = "response")`>=1/2
true_kid = testing_kid$Buy=='1'
kid_glm_correct = (sum((pre_kid+true_kid)==2)+sum((pre_kid+true_kid)==0))/length(testing_kid$Buy)
#lda for kids
library(MASS)
library(dplyr)
kids_lda = lda(Buy~., data = training_kid)
kid_lda_predictions <- kids_lda %>% predict(testing_kid)
kid_lda_correct = sum(kid_lda_predictions$class==testing_kid$Buy)/length(testing_kid$Buy)
